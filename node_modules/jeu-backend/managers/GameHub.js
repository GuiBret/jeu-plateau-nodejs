const Game = require("../game.js");

/* This class stores all current games and manages them (creation, deletion, etc) */
class GameHub {
    constructor() {
        this.games = [];
        this.gameIDlist = []; // This array will contain the ids of all games (useful to check if a game has already been started in a specific ID, faster at least than checking through games)  
    }
    
    generateGameID() {
        let id = Math.floor(Math.random() * 10000),
            validId = false;
        
        while(!validId) {
            
            if(!this.gameIDlist.includes(id)) {
                this.gameIDlist.push(id); // We store it to the game IDs list
                validId = true;
            } else { // If the ID is already taken, we create a new one
                id = Math.floor(Math.random() * 10000);
            }   
        }
        
        return id;
    }
    
    createGame() {
        let game_id = this.generateGameID();
        let game = new Game(game_id);
        this.games.push(game);
        
        return game_id;
    }
    
    getGame(game_id, params) {
        
        return new Promise((resolve, reject) => {
            for(let game of this.games) {
                if(game.game_id == game_id) {
                    resolve(game);
                    return;
                }
            }
            reject("NO_GAME_FOUND");
        });
    }
    
    deleteGame(game_id) {
        "use strict";
        let cur_game_id;

        for(let i = 0; i < this.games.length; i++) { // Game deletion
            
            cur_game_id = this.games[i].game_id;

            if(cur_game_id == game_id) {
                this.games.splice(i, 1);
            }
        }
        
        let item_pos = this.gameIDlist.indexOf(game_id);
        
        if(item_pos > -1) { // Game ID deletion

            this.gameIDlist.splice(item_pos, 1);
        }

        return 1;
    }
    
    
    
}

module.exports = GameHub;